<%- include('../partials/admin/header') %>
<%- include('../partials/admin/sidePanel') %>

<div class="main-panel">
  <div class="content-wrapper">
    <div class="col-12 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Add Product</h4>
          <form
            class="forms-sample"
            action="/admin/products/add-product"
            method="post"
            enctype="multipart/form-data"
            id="addProductForm"
          >
            <div class="form-group">
              <label for="exampleInputName1">Product Name</label>
              <input
                type="text"
                name="productName"
                class="form-control"
                id="exampleInputName1"
                placeholder="Product Name"
                required
              />
            </div>

            <div class="form-group">
              <label for="exampleInputName1">Description</label>
              <input
                type="text"
                name="description"
                class="form-control"
                id="exampleInputName1"
                placeholder="Description"
                required
              />
            </div>

            <div class="form-group">
              <label for="exampleSelectGender">Category</label>
              <select
                class="form-control"
                id="exampleSelectGender"
                name="category"
              >
                <% if(category.length){ %> <% category.forEach((item)=>{ %>
                <option value="<%= item._id %>"><%= item.category %></option>
                <% }) %> <% }%>
              </select>
            </div>

            <div class="form-group">
              <label for="exampleInputEmail3">Quantity</label>
              <input
                type="number"
                name="quantity"
                class="form-control"
                id="exampleInputEmail3"
                placeholder="Quantity"
                required
              />
            </div>

            <div class="form-group">
              <label for="exampleInputPassword4">Price</label>
              <input
                type="number"
                name="price"
                class="form-control"
                id="exampleInputPassword4"
                placeholder="Price"
                required
              />
            </div>

            <div class="form-group">
              <label for="exampleInputPassword4">Offer in Percentage</label>
              <input
                type="number"
                name="offer"
                class="form-control"
                id="exampleInputPassword5"
                placeholder="Offer"                
              />
            </div>

            <div class="form-group">
              <label>Image</label>
              <div class="input-group col-sx-12">
                  <input
                      type="file"
                      class="form-control"
                      id="basic-default-name images"
                      name="images"
                      data-target-index="1"
                      accept="image/*"
                      multiple
                      onchange="previewImages(this)"
                  />
              </div>
              <!-- Preview container for selected images -->
              <div id="imagePreviewContainer" class="mt-3"></div>
          </div>

            <button type="submit" class="btn btn-primary mr-2">Submit</button>
            <a href="/admin/products" class="btn btn-light">Cancel</a>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add this script at the end of your HTML file, before the </body> tag -->
<script>
  function previewImages(input) {
    var previewContainer = document.getElementById("imagePreviewContainer");
    previewContainer.innerHTML = ""; // Clear previous previews

    if (input.files) {
      var filesAmount = input.files.length;
      for (var i = 0; i < filesAmount; i++) {
        var reader = new FileReader();

        reader.onload = function (e) {
          var previewImage = document.createElement("img");
          previewImage.src = e.target.result;
          previewImage.style.maxWidth = "100px"; // Adjust as needed
          previewContainer.appendChild(previewImage);
        };

        reader.readAsDataURL(input.files[i]);
      }
    }
  }
</script>

<script>
  function previewImages(input) {
      var previewContainer = document.getElementById("imagePreviewContainer");
      previewContainer.innerHTML = "";

      if (input.files) {
          var filesAmount = input.files.length;

          for (let i = 0; i < filesAmount; i++) {
              var reader = new FileReader();

              reader.onload = function (event) {
                  var deleteButton = document.createElement("button");
                  deleteButton.innerHTML = "x";
                  deleteButton.onclick = function () {
                      // Remove the preview and the associated file input
                      previewContainer.removeChild(previewContainer.childNodes[i]);
                      input.files.splice(i, 1);
                  };

                  var img = document.createElement("img");
                  img.src = event.target.result;
                  img.width = 100; // Set your desired width
                  img.height = 100; // Set your desired height

                  var imgContainer = document.createElement("div");
                  imgContainer.appendChild(img);
                  imgContainer.appendChild(deleteButton);

                  previewContainer.appendChild(imgContainer);
              };

              reader.readAsDataURL(input.files[i]);
          }
      }
  }
</script>

<!-- Add this script at the end of your HTML body or in a separate JavaScript file -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const addProductForm = document.getElementById('addProductForm');
    
    addProductForm.addEventListener('submit', function (event) {
      // Clear existing error messages
      clearErrors();

      // Validation for Product Name
      const productNameInput = addProductForm.querySelector('[name="productName"]');
      const productNameValue = productNameInput.value;
      if (!isValidName(productNameValue)) {
        event.preventDefault();
        displayError(productNameInput, 'Product Name is not valid.');
      }

      // Validation for Description
      const descriptionInput = addProductForm.querySelector('[name="description"]');
      const descriptionValue = descriptionInput.value;
      if (!isValidDescription(descriptionValue)) {
        event.preventDefault();
        displayError(descriptionInput, 'Description should be at least 8 characters long and at most 109 characters.');
      }

      // Validation for Offer
      const offerInput = addProductForm.querySelector('[name="offer"]');
      const offerValue = offerInput.value;
      if (!isValidOffer(offerValue)) {
        event.preventDefault();
        displayError(offerInput, 'Offer should be between 1 and 95.');
      }

      // Validation for Quantity
      const quantityInput = addProductForm.querySelector('[name="quantity"]');
      const quantityValue = quantityInput.value;
      if (!isValidQuantity(quantityValue)) {
        event.preventDefault();
        displayError(quantityInput, 'Quantity should be greater than 0.');
      }

      // Validation for Price
      const priceInput = addProductForm.querySelector('[name="price"]');
      const priceValue = priceInput.value;
      if (!isValidPrice(priceValue)) {
        event.preventDefault();
        displayError(priceInput, 'Price should be greater than 0.');
      }

      // Additional validations for other fields can be added similarly
    });

    function isValidName(name) {
      // Add your custom validation logic for the product name
      return /^[a-zA-Z\s]+$/.test(name);
    }

    function isValidDescription(description) {
      // Add your custom validation logic for the description length
      return description.length >= 8 && description.length <= 109;
    }

    function isValidOffer(offer) {
      // Add your custom validation logic for the offer range
      return offer >= 1 && offer <= 95;
    }

    function isValidQuantity(quantity) {
      // Add your custom validation logic for the quantity
      return quantity > 0;
    }

    function isValidPrice(price) {
      // Add your custom validation logic for the price
      return price > 0;
    }

    function displayError(inputElement, errorMessage) {
      // Display error message under the form
      const errorDiv = document.createElement('div');
      errorDiv.className = 'text-danger';
      errorDiv.textContent = errorMessage;

      const parentDiv = inputElement.parentElement;
      parentDiv.appendChild(errorDiv);
    }

    function clearErrors() {
      // Clear existing error messages
      const errorMessages = document.querySelectorAll('.text-danger');
      errorMessages.forEach((errorMessage) => {
        errorMessage.remove();
      });
    }
  });
</script>
